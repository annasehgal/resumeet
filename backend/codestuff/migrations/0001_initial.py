# Generated by Django 4.2.16 on 2024-10-19 06:34

import codestuff.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_us', models.TextField()),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('logo', models.FileField(blank=True, null=True, upload_to='', verbose_name='Logo')),
                ('public', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, null=True, verbose_name='Set active?')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communities', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='member', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keywords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=200)),
                ('number_of_clicks', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Keywords',
                'verbose_name_plural': 'Keywords',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major', models.CharField(max_length=200)),
                ('population', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Major',
            },
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField(validators=[codestuff.models.validate_dob])),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2)),
                ('city', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Personal Profile',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile_image', verbose_name='Profile picture')),
                ('alternate', models.TextField(verbose_name='Alternate text')),
                ('about_me', models.TextField(blank=True, null=True)),
                ('opt_in', models.BooleanField(default=False)),
                ('position', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Position for sorting', unique=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('keywords', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codestuff.keywords')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account Profile',
                'verbose_name_plural': 'Account Profiles',
            },
        ),
        migrations.CreateModel(
            name='SupportEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('mfg_date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('opt_in', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codestuff.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('time', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('public', models.BooleanField(default=False, verbose_name='Make Public?')),
                ('logo', models.FileField(blank=True, null=True, upload_to='', verbose_name='Logo')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, null=True, verbose_name='Set active?')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='codestuff.community')),
                ('members', models.ManyToManyField(blank=True, related_name='room_members', to=settings.AUTH_USER_MODEL)),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms_created', to=settings.AUTH_USER_MODEL, verbose_name='Room Creator')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('ability_to_add_rooms', models.BooleanField(default=False)),
                ('ability_to_add_people', models.BooleanField(default=True)),
                ('ability_to_kick_people', models.BooleanField(default=False)),
                ('ability_to_ban_people', models.BooleanField(default=False)),
                ('ability_to_assign_roles', models.BooleanField(default=False)),
                ('hierarchy', models.IntegerField(blank=True, null=True)),
                ('administrator', models.BooleanField(default=False)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='codestuff.community')),
            ],
        ),
        migrations.CreateModel(
            name='NewsLetter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here. If you wish to stay anonymous, put "Anonymous".', max_length=100)),
                ('title', models.TextField(help_text='Write the news headline here.', verbose_name='News Headline')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('category', models.CharField(help_text='Please let us know what form of news this is.', max_length=200)),
                ('description', models.TextField(help_text='Write the news here.')),
                ('image', models.ImageField(help_text='Please provide a cover image for the news.', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('date_and_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='time and date')),
                ('position', models.IntegerField(default=1, verbose_name='Image Position')),
                ('anonymous', models.BooleanField(default=False, help_text='Remain anonymous? (not recommended)')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Feed',
                'verbose_name_plural': 'News Feed',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000000)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('user', models.CharField(max_length=1000000, verbose_name='Username')),
                ('room', models.CharField(max_length=1000000)),
                ('message_number', models.PositiveIntegerField(default=0, editable=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='media/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='InternProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('resume', models.FileField(blank=True, null=True, upload_to='')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codestuff.major')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='codestuff.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Intern Profile',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend_username', models.CharField(blank=True, max_length=500, null=True)),
                ('last_messaged', models.DateTimeField(blank=True, null=True)),
                ('currently_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('online', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('latest_messages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codestuff.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=200)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='participant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Declined')], default=0)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Friend Request',
                'verbose_name_plural': 'Friend Requests',
                'unique_together': {('sender', 'receiver')},
            },
        ),
        migrations.CreateModel(
            name='CommunityRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='codestuff.community')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='codestuff.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'community', 'role')},
            },
        ),
    ]
